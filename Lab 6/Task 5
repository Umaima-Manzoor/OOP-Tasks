#include <iostream>
using namespace std;

class Device {
	protected:
	    int deviceID;
	    bool status;
	
	public:
	    Device() {}
	
	    Device(int id, bool stat) : deviceID(id), status(stat) {}
	
	    void displayDetails() {
	        cout << "Device ID: " << deviceID << endl;
	        cout << "Status: " << (status ? "Active" : "Inactive") << endl;
	    }
};


class SmartPhone : virtual public Device { 
	protected:
	    float screenSize;
	
	public:
	    SmartPhone() {}
	
	    SmartPhone(int id, bool stat, float size) : Device(id, stat), screenSize(size) {}
	
	    void displayDetails() {
	        cout << "Screen Size: " << screenSize << " inches" << endl;
	    }
};


class SmartWatch : virtual public Device { 
	protected:
	    bool heartRateMonitor;
	
	public:
	    SmartWatch() {}
	
	    SmartWatch(int id, bool stat, bool monitor) : Device(id, stat), heartRateMonitor(monitor) {}
	
	    void displayDetails() {
	        cout << "Heart Rate Monitor: " << (heartRateMonitor ? "Enabled" : "Disabled") << endl;
	    }
};

class SmartWearable : public SmartPhone, public SmartWatch {
	protected:
	    int stepCounter;
	
	public:
	    SmartWearable(int id, bool stat, float size, bool monitor, int steps) 
	        : Device(id, stat), SmartPhone(id, stat, size), SmartWatch(id, stat, monitor), stepCounter(steps) {}
	
	    void displayDetails() {
	    	Device::displayDetails();
	        SmartPhone::displayDetails();
	        SmartWatch::displayDetails();
	        cout << "Step Counter: " << stepCounter << " steps" << endl;
	    }
};

int main() {
    int deviceID, stepCounter;
    bool status, heartRateMonitor;
    float screenSize;

    cout << "Enter Device ID: ";
    cin >> deviceID;
    cout << "Enter Status (1 for Active, 0 for Inactive): ";
    cin >> status;
    cout << "Enter Screen Size (in inches): ";
    cin >> screenSize;
    cout << "Enter Heart Rate Monitor Status (1 for Enabled, 0 for Disabled): ";
    cin >> heartRateMonitor;
    cout << "Enter Step Counter: ";
    cin >> stepCounter;


    SmartWearable wearable(deviceID, status, screenSize, heartRateMonitor, stepCounter);

    cout << "\nSmart Wearable Device Details:" << endl;
    wearable.displayDetails();

    return 0;
}
