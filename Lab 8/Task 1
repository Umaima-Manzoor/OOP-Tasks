#include <iostream>
#include <cmath>
using namespace std;

class Complex {
	private:
	    float real;
	    float imag;
	
	public:
		Complex() {}
	    Complex(float r=0, float i=0) : real(r), imag(i) {}
	
	    
	    Complex operator+(const Complex& obj) const {
	        return Complex(real + obj.real, imag + obj.imag);
	    }
	
	    
	    Complex operator-(const Complex& obj) const {
	        return Complex(real - obj.real, imag - obj.imag);
	    }
	
	    
	    Complex operator*(const Complex& obj) const {
	        return Complex(real * obj.real - imag * obj.imag,
	                      real * obj.imag + imag * obj.real);
	    }
	
	    
	    Complex operator/(const Complex& obj) const {
	        float denominator = obj.real * obj.real + obj.imag * obj.imag;
	        return Complex((real * obj.real + imag * obj.imag) / denominator,
	                      (imag * obj.real - real * obj.imag) / denominator);
	    }
	
	    
	    friend float magnitude(const Complex& c) {
	        return sqrt((c.real * c.real) + (c.imag * c.imag));
	    }
	
	    
	    friend ostream& operator<<(ostream& os, const Complex& c) {
	        os << "(" << c.real;
	        if (c.imag >= 0)
	            os << " + " << c.imag << "i)";
	        else
	            os << " - " << -c.imag << "i)";
	        return os;
	    }
};

int main() {
    
    Complex c1(3, 4);
    Complex c2(1, 2);

    
    cout << "Complex Number 1: " << c1 << endl;
    cout << "Complex Number 2: " << c2 << endl<<endl;
    cout << "Arithmetic Operations:" << endl;
    cout << "Addition: " << c1 + c2 << endl;
    cout << "Subtraction: " << c1 - c2 << endl;
    cout << "Multiplication: " << c1 * c2 << endl;
    cout << "Division: " << c1 / c2 << endl<<endl;


    cout << "Magnitudes:" << endl;
    cout << "Magnitude of " << c1 << " = " << magnitude(c1) << endl;
    cout << "Magnitude of " << c2 << " = " << magnitude(c2) << endl;

    return 0;
} 
