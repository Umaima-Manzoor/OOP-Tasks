#include <iostream>
#include <string>
using namespace std;

class Car {
	private:
	    string model;
	    double price;
	    
	
	public:
	    Car(string mdl = "", double prc = 0.0) : model(mdl), price(prc) {}
	    
		friend class InventoryManager;
	    friend void comparePrice(const Car& car1, const Car& car2);
};


class InventoryManager {
	public:
		
	    void displayCarDetails(const Car& car) {
	        cout << "Model: " << car.model << endl;
	        cout << "Price: $" << car.price << endl;
	    }
	    
	    void updateModel(Car& car, string newModel) {
	        if (!newModel.empty()) {
	            car.model = newModel;
	            cout << "Model updated successfully to " << car.model << endl;
	        } else {
	            cout << "Invalid model name. Model name cannot be empty." << endl;
	        }
	    }
	    
	    void updatePrice(Car& car, double newPrice) {
	        if (newPrice >= 0) {
	            car.price = newPrice;
	            cout << "Price updated successfully for " << car.model << endl;
	        } else {
	            cout << "Invalid price. Price must be non-negative." << endl;
	        }
	    }
};


void comparePrice(const Car& car1, const Car& car2) {
    if (car1.price > car2.price) {
        cout << car1.model << " is more expensive by $" << (car1.price - car2.price) << endl;
    }
    else if (car2.price > car1.price) {
        cout << car2.model << " is more expensive by $" << (car2.price - car1.price) << endl;
    }
    else {
        cout << "Both cars are priced equally at $" << car1.price << endl;
    }
}

int main() {
    
    Car car1("Toyota Camry", 25000.0);
    Car car2("Honda Civic", 22000.0);
    
    
    InventoryManager manager;
    
    cout << "Initial Car Details:" << endl;
    cout << "\nCar 1:" << endl;
    manager.displayCarDetails(car1);
    cout << "\nCar 2:" << endl;
    manager.displayCarDetails(car2);
    
    
    cout << "\nPrice Comparison:" << endl;
    comparePrice(car1, car2);
    
    
    cout << "\nUpdating price of Toyota Camry..." << endl;
    manager.updatePrice(car1, 23000.0);
    
    cout << "\nUpdated Car Details:" << endl;
    cout << "\nCar 1:" << endl;
    manager.displayCarDetails(car1);
    cout << "\nCar 2:" << endl;
    manager.displayCarDetails(car2);
    
    
    cout << "\nPrice Comparison after update:" << endl;
    comparePrice(car1, car2);
    
    return 0;
}
